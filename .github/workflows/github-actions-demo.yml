name: CI/CD Pilar
on:
  push:
    branches:
      - main

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      python-version: ${{ steps.python.outputs.python-version }}
      poetry-version: ${{ steps.poetry.outputs.poetry-version }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python 3.12
        id: python
        uses: actions/setup-python@v2
        with:
          python-version: 3.12

      - name: Install Poetry
        id: poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "poetry-version=$(poetry --version)" >> $GITHUB_ENV

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/pypoetry
            ~/.virtualenvs
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-

      - name: Install dependencies
        run: poetry install --no-root --no-interaction

  lint:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Use Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ needs.setup.outputs.python-version }}

      - name: Install Poetry
        run: |
          echo "${{ needs.setup.outputs.poetry-version }}"
          poetry --version

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/pypoetry
            ~/.virtualenvs
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-

      - name: Running pylint
        run: poetry run pylint . --recursive=true

  test:
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Use Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ needs.setup.outputs.python-version }}

      - name: Install Poetry
        run: |
          echo "${{ needs.setup.outputs.poetry-version }}"
          poetry --version

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/pypoetry
            ~/.virtualenvs
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-

      - name: Running test
        run: poetry run pytest

  deploy:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          script: |
            cd /var/www/app/pilar
            make stop
            git pull origin main
            make start
